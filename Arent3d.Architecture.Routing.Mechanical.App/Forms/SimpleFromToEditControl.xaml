<UserControl
    x:Class="Arent3d.Architecture.Routing.Mechanical.App.Forms.SimpleFromToEditControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:forms="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms;assembly=Arent3d.Architecture.Routing.AppBase"
    xmlns:local="clr-namespace:Arent3d.Architecture.Routing.Mechanical.App.Forms"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms.ValueConverters"
    xmlns:valueConverters1="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms.ValueConverters;assembly=Arent3d.Architecture.Routing.AppBase"
    Width="Auto"
    Height="Auto"
    Background="White"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="LengthUnit" TargetType="{x:Type Label}">
            <Setter Property="Content" Value="&quot;" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="IMPERIAL">
                    <Setter Property="Content" Value="&quot;" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="METRIC">
                    <Setter Property="Content" Value="mm" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Border BorderBrush="LightGray" BorderThickness="1">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Label
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="System Type">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UseSystemType, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource SystemColors.GrayTextBrushKey}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox
                Grid.Row="0"
                Grid.Column="1"
                VerticalAlignment="Center"
                DisplayMemberPath="Name"
                ItemsSource="{Binding SystemTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                SelectedIndex="{Binding SystemTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                SelectionChanged="SystemTypeComboBox_SelectionChanged">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SystemTypeEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseSystemType, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Label
                Grid.Row="2"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Diameter" />
            <ComboBox
                Grid.Row="2"
                Grid.Column="1"
                VerticalAlignment="Center"
                ItemsSource="{Binding Diameters, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                SelectedIndex="{Binding DiameterIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                SelectionChanged="DiameterComboBox_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters1:LengthToStringConverter.Default}, Mode=OneWay}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="IMPERIAL">
                                            <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters1:LengthToStringConverter.Inches}, Mode=OneWay}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="METRIC">
                                            <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters1:LengthToStringConverter.Millimeters}, Mode=OneWay}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Label
                Grid.Row="4"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="First connector through height" />
            <StackPanel
                Grid.Row="4"
                Grid.Column="1"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <CheckBox
                    x:Name="FromHeightSetting"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Checked="Height_OnChecked"
                    IsChecked="{Binding UseFromFixedHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                    Unchecked="Height_OnUnchecked" />
                <ComboBox
                    Name="FromLocationTypeComboBox"
                    Margin="5,0,5,0"
                    Padding="5,0,0,4"
                    VerticalAlignment="Center"
                    DisplayMemberPath="Value"
                    ItemsSource="{Binding LocationTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                    SelectedIndex="{Binding FromLocationTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                    SelectionChanged="LocationTypeComboBox_SelectionChanged">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Setter Property="Height" Value="18" />
                            <Setter Property="FontSize" Value="12" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <!--  Manually update Value because binding is not called  -->
                <forms:NumericUpDownEx
                    x:Name="FromFixedHeightNumericUpDown"
                    Width="80"
                    Increment="100"
                    TextAlignment="Right"
                    ValueChanged="FromFixedHeightNumericUpDown_OnValueChanged">
                    <forms:NumericUpDownEx.Style>
                        <Style TargetType="{x:Type forms:NumericUpDownEx}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </forms:NumericUpDownEx.Style>
                </forms:NumericUpDownEx>
                <Label Margin="0,0,0,0">
                    <Label.Style>
                        <Style BasedOn="{StaticResource LengthUnit}" TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>

            <Label
                Grid.Row="5"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Second connector through height">
                <Label.Style>
                    <Style TargetType="Label">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDifferentLevel, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <StackPanel
                Grid.Row="5"
                Grid.Column="1"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDifferentLevel, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <CheckBox
                    x:Name="ToHeightSetting"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Checked="ToHeight_OnChecked"
                    IsChecked="{Binding UseToFixedHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                    Unchecked="ToHeight_OnUnchecked" />
                <ComboBox
                    Name="ToLocationTypeComboBox"
                    Margin="5,0,5,0"
                    Padding="5,0,0,4"
                    VerticalAlignment="Center"
                    DisplayMemberPath="Value"
                    ItemsSource="{Binding LocationTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                    SelectedIndex="{Binding ToLocationTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                    SelectionChanged="LocationTypeComboBox_SelectionChanged">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Setter Property="Height" Value="18" />
                            <Setter Property="FontSize" Value="12" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=ToHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <!--  Manually update Value because binding is not called  -->
                <forms:NumericUpDownEx
                    x:Name="ToFixedHeightNumericUpDown"
                    Width="80"
                    Increment="100"
                    TextAlignment="Right"
                    ValueChanged="ToFixedHeightNumericUpDown_OnValueChanged">
                    <forms:NumericUpDownEx.Style>
                        <Style TargetType="{x:Type forms:NumericUpDownEx}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=ToHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </forms:NumericUpDownEx.Style>
                </forms:NumericUpDownEx>
                <Label Margin="0,0,0,0">
                    <Label.Style>
                        <Style BasedOn="{StaticResource LengthUnit}" TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=ToHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>

            <Label
                Grid.Row="6"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Avoid Type" />

            <ComboBox
                Grid.Row="6"
                Grid.Column="1"
                VerticalAlignment="Center"
                DisplayMemberPath="Value"
                ItemsSource="{Binding AvoidTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                SelectedIndex="{Binding AvoidTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:SimpleFromToEditControl}}"
                SelectionChanged="AvoidTypeComboBox_OnSelectionChanged" />
        </Grid>
    </Border>
</UserControl>