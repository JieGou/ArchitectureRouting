<UserControl
    x:Class="Arent3d.Architecture.Routing.Electrical.App.Forms.RangeRouteWithHeightAdjustmentEditControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:forms="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms;assembly=Arent3d.Architecture.Routing.AppBase"
    xmlns:forms1="clr-namespace:Arent3d.Architecture.Routing.Electrical.App.Forms"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters1="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms.ValueConverters;assembly=Arent3d.Architecture.Routing.AppBase"
    Width="Auto"
    Height="Auto"
    Background="White"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="LengthUnit" TargetType="{x:Type Label}">
            <Setter Property="Content" Value="&quot;" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="IMPERIAL">
                    <Setter Property="Content" Value="&quot;" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="METRIC">
                    <Setter Property="Content" Value="mm" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Border BorderBrush="LightGray" BorderThickness="1">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Label
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="System Type">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UseSystemType, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource SystemColors.GrayTextBrushKey}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox
                Grid.Row="0"
                Grid.Column="1"
                VerticalAlignment="Center"
                DisplayMemberPath="Name"
                ItemsSource="{Binding SystemTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectedIndex="{Binding SystemTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectionChanged="SystemTypeComboBox_SelectionChanged">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SystemTypeEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseSystemType, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Label
                Grid.Row="1"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="{Binding CurveTypeLabel, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UseCurveType, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource SystemColors.GrayTextBrushKey}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox
                Grid.Row="1"
                Grid.Column="1"
                VerticalAlignment="Center"
                DisplayMemberPath="Name"
                ItemsSource="{Binding CurveTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectedIndex="{Binding CurveTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectionChanged="CurveTypeComboBox_SelectionChanged">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurveTypeEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseCurveType, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Label
                Grid.Row="2"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Diameter" />
            <ComboBox
                Grid.Row="2"
                Grid.Column="1"
                VerticalAlignment="Center"
                ItemsSource="{Binding Diameters, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectedIndex="{Binding DiameterIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectionChanged="DiameterComboBox_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters1:LengthToStringConverter.Default}, Mode=OneWay}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="IMPERIAL">
                                            <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters1:LengthToStringConverter.Inches}, Mode=OneWay}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="METRIC">
                                            <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters1:LengthToStringConverter.Millimeters}, Mode=OneWay}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Label
                Grid.Row="3"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Via PS" />

            <CheckBox
                Grid.Row="3"
                Grid.Column="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Checked="Direct_OnChecked"
                IsChecked="{Binding IsRouteOnPipeSpace, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                Unchecked="Direct_OnUnchecked" />
            <Label
                Grid.Row="4"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Height from Power to Pass" />
            <StackPanel
                Grid.Row="4"
                Grid.Column="1"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <CheckBox
                    x:Name="FromPowerToPassHeightSetting"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Checked="FromPowerToPassHeight_OnChecked"
                    IsChecked="{Binding UseFromPowerToPassFixedHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                    Unchecked="Height_OnUnchecked" />
                <ComboBox
                    Name="FromPowerToPassLocationTypeComboBox"
                    Margin="5,0,5,0"
                    Padding="5,0,0,4"
                    VerticalAlignment="Center"
                    DisplayMemberPath="Value"
                    ItemsSource="{Binding LocationTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                    SelectedIndex="{Binding FromPowerToPassLocationTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                    SelectionChanged="PowerToPassLocationTypeComboBox_SelectionChanged">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Setter Property="Height" Value="18" />
                            <Setter Property="FontSize" Value="12" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromPowerToPassHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <!--  Manually update Value because binding is not called  -->
                <forms:NumericUpDownEx
                    x:Name="FromPowerToPassFixedHeightNumericUpDown"
                    Width="80"
                    Increment="100"
                    TextAlignment="Right"
                    ValueChanged="FromPowerToPassFixedHeightNumericUpDown_OnValueChanged">
                    <forms:NumericUpDownEx.Style>
                        <Style TargetType="{x:Type forms:NumericUpDownEx}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromPowerToPassHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </forms:NumericUpDownEx.Style>
                </forms:NumericUpDownEx>
                <Label Margin="0,0,0,0">
                    <Label.Style>
                        <Style BasedOn="{StaticResource LengthUnit}" TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromPowerToPassHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>

            <Label
                Grid.Row="5"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Height from Pass to Sensors" />
            <StackPanel
                Grid.Row="5"
                Grid.Column="1"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <CheckBox
                    x:Name="FromHeightSetting"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Checked="Height_OnChecked"
                    IsChecked="{Binding UseFromPassToSensorsFixedHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                    Unchecked="Height_OnUnchecked" />
                <ComboBox
                    Name="FromLocationTypeComboBox"
                    Margin="5,0,5,0"
                    Padding="5,0,0,4"
                    VerticalAlignment="Center"
                    DisplayMemberPath="Value"
                    ItemsSource="{Binding LocationTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                    SelectedIndex="{Binding FromPassToSensorsLocationTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                    SelectionChanged="LocationTypeComboBox_SelectionChanged">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Setter Property="Height" Value="18" />
                            <Setter Property="FontSize" Value="12" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <!--  Manually update Value because binding is not called  -->
                <forms:NumericUpDownEx
                    x:Name="FromPassToSensorsFixedHeightNumericUpDown"
                    Width="80"
                    Increment="100"
                    TextAlignment="Right"
                    ValueChanged="FromPassToSensorsFixedHeightNumericUpDown_OnValueChanged">
                    <forms:NumericUpDownEx.Style>
                        <Style TargetType="{x:Type forms:NumericUpDownEx}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </forms:NumericUpDownEx.Style>
                </forms:NumericUpDownEx>
                <Label Margin="0,0,0,0">
                    <Label.Style>
                        <Style BasedOn="{StaticResource LengthUnit}" TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=FromHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>

            <Label
                Grid.Row="7"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Avoid Type" />

            <ComboBox
                Grid.Row="7"
                Grid.Column="1"
                VerticalAlignment="Center"
                DisplayMemberPath="Value"
                ItemsSource="{Binding AvoidTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectedIndex="{Binding AvoidTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectionChanged="AvoidTypeComboBox_OnSelectionChanged" />

            <Label
                Grid.Row="8"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="Shaft">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UseShaft, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource SystemColors.GrayTextBrushKey}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox
                Grid.Row="8"
                Grid.Column="1"
                VerticalAlignment="Center"
                ItemsSource="{Binding Shafts, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectedIndex="{Binding ShaftIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}"
                SelectionChanged="ShaftComboBox_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding Converter="{x:Static valueConverters1:ShaftToStringConverter.Instance}" Mode="OneWay">
                                    <MultiBinding.Bindings>
                                        <Binding Path="Value" />
                                        <Binding Path="DisplayUnitSystem" RelativeSource="{RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShaftEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseShaft, RelativeSource={RelativeSource FindAncestor, AncestorType=forms1:RangeRouteWithHeightAdjustmentEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
        </Grid>
    </Border>
</UserControl>