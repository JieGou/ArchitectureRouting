<UserControl x:Class="Arent3d.Architecture.Routing.AppBase.Forms.FromToEditControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms"
             xmlns:controlLib="clr-namespace:ControlLib;assembly=NumericUpDown"
             xmlns:valueConverters="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms.ValueConverters"
             mc:Ignorable="d"
             Background="White"
             Height="Auto" Width="Auto">
    <Border BorderBrush="LightGray" BorderThickness="1">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Label Content="System Type"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Grid.Column="0"
                   Grid.Row="0">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource SystemColors.ControlTextBrushKey}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UseSystemType, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource SystemColors.GrayTextBrushKey}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox Grid.Column="1"
                      Grid.Row="0"
                      ItemsSource="{Binding  SystemTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      DisplayMemberPath="Name"
                      SelectionChanged="SystemTypeComboBox_SelectionChanged"
                      SelectedIndex="{Binding SystemTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      VerticalAlignment="Center">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SystemTypeEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseSystemType, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Label Content="{Binding CurveTypeLabel, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Grid.Column="0"
                   Grid.Row="1">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource SystemColors.ControlTextBrushKey}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UseCurveType, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource SystemColors.GrayTextBrushKey}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox Grid.Column="1"
                      Grid.Row="1"
                      ItemsSource="{Binding CurveTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      DisplayMemberPath="Name"
                      SelectionChanged="CurveTypeComboBox_SelectionChanged"
                      SelectedIndex="{Binding CurveTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      VerticalAlignment="Center">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurveTypeEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseCurveType, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Label Content="Diameter"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Grid.Column="0"
                   Grid.Row="2" />
            <ComboBox Grid.Column="1"
                      Grid.Row="2"
                      ItemsSource="{Binding Diameters, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      SelectionChanged="DiameterComboBox_SelectionChanged"
                      SelectedIndex="{Binding DiameterIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      VerticalAlignment="Center">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters:LengthToStringConverter.Default}, Mode=OneWay}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="IMPERIAL">
                                            <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters:LengthToStringConverter.Inches}, Mode=OneWay}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="METRIC">
                                            <Setter Property="Text" Value="{Binding Converter={x:Static valueConverters:LengthToStringConverter.Millimeters}, Mode=OneWay}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Label Content="Via PS"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Grid.Column="0"
                   Grid.Row="3" />

            <CheckBox Grid.Column="1"
                      Grid.Row="3"
                      IsChecked="{Binding IsRouteOnPipeSpace, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      Checked="Direct_OnChecked"
                      Unchecked="Direct_OnUnchecked"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center" />

            <Label Grid.Row="4" Grid.Column="0" Content="Frist connector through height"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center" />
            <StackPanel Grid.Row="4" Grid.Column="1" VerticalAlignment="Center"
                        Orientation="Horizontal">
                <CheckBox x:Name="HeightSetting" Margin="0,0,0,0"
                          IsChecked="{Binding UseFixedHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                          Checked="Height_OnChecked"
                          Unchecked="Height_OnUnchecked"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center" />
                <ComboBox Name="LocationTypeComboBox"
                          ItemsSource="{Binding LocationTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                          SelectionChanged="LocationTypeComboBox_SelectionChanged"
                          SelectedIndex ="{Binding LocationTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                          VerticalAlignment="Center"
                          DisplayMemberPath="Value"
                          Margin="5,0,5,0"
                          Padding="5,0,0,4">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="Height" Value="18"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=HeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <!-- Manually update Value because binding is not called -->
                <controlLib:NumericUpDown Name="FixedHeightNumericUpDown"
                                          ValueChanged="FixedHeightNumericUpDown_OnValueChanged"
                                          VerticalAlignment="Center" HorizontalAlignment="Right"
                                          HorizontalContentAlignment="Right"
                                          Increment="100"
                                          MaxValue="{Binding CurrentMaxValue, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                                          MinValue="{Binding CurrentMinValue, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                                          Width="80">
                    <controlLib:NumericUpDown.Style>
                        <Style TargetType="{x:Type controlLib:NumericUpDown}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=HeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controlLib:NumericUpDown.Style>
                </controlLib:NumericUpDown>
                <Label Margin="0,0,0,0">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="Content" Value="&quot;"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=HeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="IMPERIAL">
                                    <Setter Property="Content" Value="&quot;"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="METRIC">
                                    <Setter Property="Content" Value="mm"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>

            <Label Grid.Row="5" Grid.Column="0" Content="Second connector through height"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center" 
                   Visibility="Hidden"
                   Name="LbHeight2"/>
            <StackPanel Grid.Row="5" Grid.Column="1" VerticalAlignment="Center"
                        Orientation="Horizontal">
                <CheckBox x:Name="ToHeightSetting" Margin="0,0,0,0"
                          IsChecked="{Binding ToUseFixedHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                          Checked="ToHeight_OnChecked"
                          Unchecked="ToHeight_OnUnchecked"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center" 
                          Visibility="Hidden"/>
                <ComboBox Name="ToLocationTypeComboBox"
                          ItemsSource="{Binding LocationTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                          SelectionChanged="ToLocationTypeComboBox_SelectionChanged"
                          SelectedIndex ="{Binding ToLocationTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                          VerticalAlignment="Center"
                          DisplayMemberPath="Value"
                          Margin="5,0,5,0"
                          Padding="5,0,0,4">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="Height" Value="18"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=ToHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <!-- Manually update Value because binding is not called -->
                <controlLib:NumericUpDown Name="ToFixedHeightNumericUpDown"
                                          ValueChanged="ToFixedHeightNumericUpDown_OnValueChanged"
                                          VerticalAlignment="Center" HorizontalAlignment="Right"
                                          HorizontalContentAlignment="Right"
                                          Increment="100"
                                          MaxValue="{Binding CurrentMaxValue, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                                          MinValue="{Binding CurrentMinValue, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                                          Width="80">
                    <controlLib:NumericUpDown.Style>
                        <Style TargetType="{x:Type controlLib:NumericUpDown}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=ToHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controlLib:NumericUpDown.Style>
                </controlLib:NumericUpDown>
                <Label Margin="0,0,0,0">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="Content" Value="&quot;"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=ToHeightSetting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="IMPERIAL">
                                    <Setter Property="Content" Value="&quot;"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="METRIC">
                                    <Setter Property="Content" Value="mm"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            
            <Label Content="Avoid Type"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Grid.Column="0"
                   Grid.Row="6" />

            <ComboBox Grid.Column="1"
                      Grid.Row="6"
                      ItemsSource="{Binding AvoidTypes, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      DisplayMemberPath="Value"
                      SelectedIndex="{Binding AvoidTypeIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      SelectionChanged="AvoidTypeComboBox_OnSelectionChanged"
                      VerticalAlignment="Center">
            </ComboBox>
            
            <Label Content="Shaft"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Grid.Column="0"
                   Grid.Row="7">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource SystemColors.ControlTextBrushKey}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UseShaft, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource SystemColors.GrayTextBrushKey}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <ComboBox Grid.Column="1"
                      Grid.Row="7"
                      ItemsSource="{Binding Shafts, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      SelectionChanged="ShaftComboBox_SelectionChanged"
                      SelectedIndex="{Binding ShaftIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}"
                      VerticalAlignment="Center">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding Converter="{x:Static valueConverters:ShaftToStringConverter.Instance}" Mode="OneWay">
                                    <MultiBinding.Bindings>
                                        <Binding Path="Value" />
                                        <Binding Path="DisplayUnitSystem" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:FromToEditControl}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShaftEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseShaft, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToEditControl}}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            
        </Grid>
    </Border>
</UserControl>