<Window x:Class="Arent3d.Architecture.Routing.AppBase.Forms.DetailTableDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="明細表作成" Height="600" Width="1100" ResizeMode="NoResize">
    <Grid>
        <Grid VerticalAlignment="Top"  HorizontalAlignment="Right">
            <Grid.RowDefinitions>
                <RowDefinition Height="55"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="55"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>
            <Button Grid.Row="0"  Width="90" Content="行追加" Margin="5,25,5,5" Height="25" />
            <Button Grid.Row="1"  Width="90" Content="行削除" Margin="5,5,5,5" Height="25" />
            <Button Grid.Row="2"  Width="90" Content="コピー" Margin="5,5,5,5" Height="25" />
            <Button Grid.Row="3"  Width="90" Content="挿入貼付" Margin="5,5,5,5" Height="25" />
            <Button Grid.Row="4"  Width="90" Content="配管まとめ" Margin="5,5,5,5" Height="25" Click="BtnPlumbingSummary_Click"/>
            <Button Grid.Row="5"  Width="90" Content="配管サイズ＊計算" Margin="5,5,5,5" Height="25" />
            <Button Grid.Row="6"  Width="90" Content="上へ" Margin="5,5,5,5" Height="25" />
            <Button Grid.Row="7"  Width="90" Content="下へ" Margin="5,5,5,5" Height="25" />
            <Button Grid.Row="8"  Width="90" Content="全選択" Margin="5,5,5,5" Height="25" />
            <Label Grid.Row="9" Content="参照情報" Margin="0,30,5,0"/>
            <Button Grid.Row="10"  Width="90" Content="▼" Margin="5,0,5,5" Height="25" />
        </Grid>
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="970" Height="30" Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="明細名称 :" />
            <TextBox Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left"  Width="300" VerticalAlignment="Center" Height="25"/>
        </Grid>

        <DataGrid x:Name="DtGrid" HorizontalAlignment="Left" Width="950" Height="450" RowHeight="25" Margin="20"  ItemsSource="{Binding DetailTableModels}" CanUserAddRows="False" AutoGenerateColumns="False">
            <DataGrid.Resources>
                <Style x:Key="ErrorStyle" TargetType="{x:Type TextBox}">
                    <Setter Property="Padding" Value="-2" />
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="計算除外" Width="30" Binding="{Binding CalculationExclusion}" CanUserSort="False"/>
                <DataGridTextColumn Header="フロア" Width="45" Binding="{Binding Floor, ValidatesOnExceptions=True}" CanUserSort="True" IsReadOnly="True" />
                <DataGridTextColumn Header="明細記号" Width="45" Binding="{Binding DetailSymbol, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="電線種類" Width="70" Binding="{Binding WireType, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="電線サイズ" Width="45" Binding="{Binding WireSize, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="電線条数" Width="45" Binding="{Binding WireStrip, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="電線本数" Width="45" Binding="{Binding WireBook, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="アース種類" Width="15" Binding="{Binding EarthType, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="アースサイズ" Width="15" Binding="{Binding EarthSize, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="アース本数" Width="15" Binding="{Binding NumberOfGrounds, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridComboBoxColumn Header="配管種類" Width="45"
                                        SelectedValueBinding="{Binding PlumbingType}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConduitTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding PlumbingType, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConduitTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="PlumpingTypeSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>    
                <DataGridTextColumn Header="配管サイズ" Width="45" Binding="{Binding PlumbingSize, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="配管本数" Width="45" Binding="{Binding NumberOfPlumbing, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="施工区分" Width="45" Binding="{Binding ConstructionClassification, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="信号種別" Width="70" Binding="{Binding SignalType, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridComboBoxColumn Header="工事項目" Width="90"
                                        SelectedValueBinding="{Binding ConstructionItems}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConstructionItems, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConstructionItems, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="ConstructionItemSelectionChanged" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <DataGridTextColumn Header="配管工事項目" Width="90" Binding="{Binding PlumbingItems, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                <DataGridTextColumn Header="備考" Width="110" Binding="{Binding Remark, ValidatesOnExceptions=True, Mode=TwoWay}" CanUserSort="False" IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
        <Grid VerticalAlignment="Bottom" Width="1100" Height="70">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="540" />
                <ColumnDefinition Width="540" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Margin="10" DockPanel.Dock="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" FontWeight="Bold">明細記号表示状態</Label>
                <RadioButton Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right"  Margin = "5,5,30,0" GroupName = "Status">表示</RadioButton>
                <RadioButton Grid.Row="1" Grid.Column="1" Margin = "5,5,0,0"  GroupName = "Status">非表示</RadioButton>
            </Grid>
            <Grid Grid.Column="1" DockPanel.Dock="Right" Width="400" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="130" />
                    <ColumnDefinition Width="130" />
                    <ColumnDefinition Width="130" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" x:Name="btnSave"
                        Content="保存"
                        Margin="5,5,5,5"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Command="{Binding SaveDetailTableCommand}"
                        Click="BtnSave_OnClick"
                        Height="27"
                        Width="110" />
            <Button Grid.Column="1" x:Name="btnSaveAndCreate"
                    Content="保存＆明細表作成"
                    Margin="5,5,5,5"
                    HorizontalAlignment="Right"
                    DockPanel.Dock="Right"
                    Command="{Binding SaveAndCreateDetailTableCommand}"
                    Click="BtnSave_OnClick"
                    Height="27"
                    Width="110" />
            <Button Grid.Column="2" x:Name="btnCompleted"
                    Content="終了"
                    Margin="5,5,5,5"
                    HorizontalAlignment="Right"
                    DockPanel.Dock="Right"
                    Click="BtnCompleted_OnClick"
                    Height="27"
                    Width="110" />
            </Grid>
        </Grid>
    </Grid>
</Window>
