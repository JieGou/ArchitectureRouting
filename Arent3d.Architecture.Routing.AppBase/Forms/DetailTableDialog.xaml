<Window x:Class="Arent3d.Architecture.Routing.AppBase.Forms.DetailTableDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="明細表作成" Height="670" Width="1100" ResizeMode="NoResize">
    <Grid>
        <Grid VerticalAlignment="Top"  HorizontalAlignment="Right">
            <Grid.RowDefinitions>
                <RowDefinition Height="55"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="55"/>
                <RowDefinition Height="55"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>
            <Button Grid.Row="0"  Width="90" Content="行追加" Margin="5,25,5,5" Height="25" Click="BtnAdd_Click" />
            <Button Grid.Row="1"  Width="90" Content="行削除" Margin="5,5,5,5" Height="25" Click="BtnDeleteLine_Click" />
            <Button Grid.Row="2"  Width="90" Content="コピー" Margin="5,5,5,5" Height="25" Click="BtnCopyLine_Click" />
            <Button Grid.Row="3"  Width="90" Content="挿入貼付" Margin="5,5,5,5" Height="25" Click="BtnPasteLine_Click" />
            <Button Grid.Row="4"  Width="90" Margin="5,5,5,5" Height="45" Click="BtnPlumbingSummary_Click">
                <Button.Content>
                    <StackPanel Orientation="Vertical">
                        <TextBlock TextAlignment="Center" Text="配管まとめ" />
                        <TextBlock TextAlignment="Center" Text="(工事項目毎)" />
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Grid.Row="5" Width="90" Margin="5,5,5,5" Height="45" Click="BtnPlumbingSummaryMixConstructionItems_Click">
                <Button.Content>
                    <StackPanel Orientation="Vertical">
                        <TextBlock TextAlignment="Center" Text="配管まとめ" />
                        <TextBlock TextAlignment="Center" Text="(工事項目混在)" />
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Grid.Row="6"  Width="90" Content="配管をばらす機能" Margin="5,5,5,5" Height="25" Click="BtnSplitPlumbing_Click" />
            <Button Grid.Row="7"  Width="90" Content="配管サイズ＊計算" Margin="5,5,5,5" Height="25" />
            <Button Grid.Row="8"  Width="90" Content="上へ" Margin="5,5,5,5" Height="25" Click="BtnMoveUp_Click" />
            <Button Grid.Row="9"  Width="90" Content="下へ" Margin="5,5,5,5" Height="25" Click="BtnMoveDown_Click" />
            <Button Grid.Row="10"  Width="90" Content="全選択" Margin="5,5,5,5" Height="25" Click="BtnSelectAll_Click" />
            <Label Grid.Row="11" Content="参照情報" Margin="0,20,5,0"/>
            <Button Grid.Row="12"  Width="90" Content="▼" Margin="5,0,5,5" Height="25" />
        </Grid>
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="970" Height="30" Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="明細名称 :" />
            <TextBox Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left"  Width="300" VerticalAlignment="Center" Height="25"/>
        </Grid>

        <DataGrid x:Name="DtGrid" HorizontalAlignment="Left" Width="950" Height="470" RowHeight="25" Margin="20"  ItemsSource="{Binding DetailTableModels}" CanUserAddRows="False" AutoGenerateColumns="False"
                  SelectionMode="Extended" SelectionUnit="FullRow" SelectionChanged="DtGrid_SelectionChanged" >
            <DataGrid.Resources>
                <Style x:Key="ErrorStyle" TargetType="{x:Type TextBox}">
                    <Setter Property="Padding" Value="-2" />
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="RoyalBlue" />
                            <Setter Property="BorderBrush" Value="RoyalBlue" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="計算除外" Width="30" Binding="{Binding CalculationExclusion}" CanUserSort="False"/>
                
                <DataGridComboBoxColumn Header="フロア" Width="45"
                                        SelectedValueBinding="{Binding Floor}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Levels, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding Floor, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Levels, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="FloorSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridTextColumn Header="明細記号" Width="45" Binding="{Binding DetailSymbol, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                
                <DataGridComboBoxColumn Header="電線種類" Width="45"
                                        SelectedValueBinding="{Binding WireType}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.WireTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding WireType, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.WireTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="WireTypeSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn Header="電線サイズ" Width="45"
                                        SelectedValueBinding="{Binding WireSize}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyWireSizeAndWireStrip}" />
                            <Setter Property="ItemsSource" Value="{Binding WireSizes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding WireSize, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyWireSizeAndWireStrip}" />
                            <Setter Property="ItemsSource" Value="{Binding WireSizes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <EventSetter Event="SelectionChanged" Handler="WireSizeSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn Header="電線条数" Width="45"
                                        SelectedValueBinding="{Binding WireStrip}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyWireSizeAndWireStrip}" />
                            <Setter Property="ItemsSource" Value="{Binding WireStrips, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding WireStrip, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyWireSizeAndWireStrip}" />
                            <Setter Property="ItemsSource" Value="{Binding WireStrips, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <EventSetter Event="SelectionChanged" Handler="WireStripSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn Header="電線本数" Width="45"
                                        SelectedValueBinding="{Binding WireBook}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Numbers, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding WireBook, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Numbers, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="WireBookSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridComboBoxColumn Header="アース種類" Width="45"
                                        SelectedValueBinding="{Binding EarthType}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.EarthTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding EarthType, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.EarthTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="EarthTypeSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn Header="アースサイズ" Width="45"
                                        SelectedValueBinding="{Binding EarthSize}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding EarthSizes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding EarthSize, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding EarthSizes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <EventSetter Event="SelectionChanged" Handler="EarthSizeSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridComboBoxColumn Header="アース本数" Width="45"
                                        SelectedValueBinding="{Binding NumberOfGrounds}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Numbers, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding NumberOfGrounds, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Numbers, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="NumberOfGroundsSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridComboBoxColumn Header="配管種類" Width="45"
                                        SelectedValueBinding="{Binding PlumbingType}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConduitTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding PlumbingType, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConduitTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="PlumpingTypeSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>    
                
                <DataGridComboBoxColumn Header="配管サイズ" Width="45"
                                        SelectedValueBinding="{Binding PlumbingSize}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyPlumbingSize}" />
                            <Setter Property="ItemsSource" Value="{Binding PlumbingSizes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding PlumbingSize, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyPlumbingSize}" />
                            <Setter Property="ItemsSource" Value="{Binding PlumbingSizes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <EventSetter Event="SelectionChanged" Handler="PlumbingSizeSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridTextColumn Header="配管本数" Width="45" Binding="{Binding NumberOfPlumbing, ValidatesOnExceptions=True}" CanUserSort="False" IsReadOnly="True" />
                
                <DataGridComboBoxColumn Header="施工区分" Width="45"
                                        SelectedValueBinding="{Binding ConstructionClassification}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConstructionClassificationTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding ConstructionClassification, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConstructionClassificationTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="ConstructionClassificationSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridComboBoxColumn Header="信号種別" Width="45"
                                        SelectedValueBinding="{Binding SignalType}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.SignalTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding SignalType, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.SignalTypes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="SignalTypeSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridComboBoxColumn Header="工事項目" Width="90"
                                        SelectedValueBinding="{Binding ConstructionItems}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConstructionItems, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ConstructionItems, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            <EventSetter Event="SelectionChanged" Handler="ConstructionItemSelectionChanged" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridComboBoxColumn Header="配管工事項目" Width="90"
                                        SelectedValueBinding="{Binding PlumbingItems}"
                                        DisplayMemberPath="Type"
                                        SelectedValuePath="Name"
                                        CanUserSort="False">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyPlumbingItems}" />
                            <Setter Property="ItemsSource" Value="{Binding PlumbingItemTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock Text="{Binding PlumbingItems, Mode=OneWay}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyPlumbingItems}" />
                            <Setter Property="ItemsSource" Value="{Binding PlumbingItemTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <EventSetter Event="SelectionChanged" Handler="PlumbingItemsSelectionChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                
                <DataGridTextColumn Header="備考" Width="110" Binding="{Binding Remark, ValidatesOnExceptions=True, Mode=TwoWay}" CanUserSort="False" >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBox.IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="RoyalBlue" />
                                        <Setter Property="BorderBrush" Value="RoyalBlue" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="IsReadOnly" Value="{Binding IsReadOnlyParameters}" />
                            <EventSetter Event="LostKeyboardFocus" Handler="RemarkChanged" />
                            <Style.Triggers>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid VerticalAlignment="Bottom" Width="1100" Height="70">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="540" />
                <ColumnDefinition Width="540" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Margin="10" DockPanel.Dock="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" FontWeight="Bold">明細記号表示状態</Label>
                <RadioButton Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right"  Margin = "5,5,30,0" GroupName = "Status">表示</RadioButton>
                <RadioButton Grid.Row="1" Grid.Column="1" Margin = "5,5,0,0"  GroupName = "Status">非表示</RadioButton>
            </Grid>
            <Grid Grid.Column="1" DockPanel.Dock="Right" Width="400" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="130" />
                    <ColumnDefinition Width="130" />
                    <ColumnDefinition Width="130" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Content="保存"
                        Margin="5,5,5,5"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Command="{Binding SaveDetailTableCommand}"
                        Click="BtnSave_OnClick"
                        Height="27"
                        Width="110" />
            <Button Grid.Column="1"
                    Content="明細表作成"
                    Margin="5,5,5,5"
                    HorizontalAlignment="Right"
                    DockPanel.Dock="Right"
                    Command="{Binding CreateDetailTableCommand}"
                    Click="BtnCreateDetailTable_OnClick"
                    Height="27"
                    Width="110" />
            <Button Grid.Column="2"
                    Content="終了"
                    Margin="5,5,5,5"
                    HorizontalAlignment="Right"
                    DockPanel.Dock="Right"
                    Click="BtnCompleted_OnClick"
                    Height="27"
                    Width="110" />
            </Grid>
        </Grid>
    </Grid>
</Window>
