<Page
    x:Class="Arent3d.Architecture.Routing.AppBase.Forms.FromToTree"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="root"
    Title="FromToTree"
    Width="Auto"
    Height="Auto"
    Background="White"
    mc:Ignorable="d">
    <Grid Margin="5" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="50*" />
            <RowDefinition Height="50*" />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Row="0"
            Width="Auto"
            Height="Auto"
            Orientation="Horizontal">
            <Label Content="{Binding TitleLabel, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}}" FontSize="20" />
        </StackPanel>


        <TreeView
            Name="FromToTreeView"
            Grid.Row="1"
            Width="Auto"
            Height="Auto"
            BorderBrush="LightGray"
            BorderThickness="1"
            MouseDoubleClick="FromToTreeView_OnMouseDoubleClick"
            PreviewKeyDown="FromToTreeView_PreviewKeyDown"
            SelectedItemChanged="FromToTreeView_OnSelectedItemChanged">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="local:FromToItem" ItemsSource="{Binding Children}">

                    <StackPanel Orientation="Horizontal">
                        <Image
                            Width="16"
                            Height="16"
                            Source="{Binding Icon}" />
                        <TextBlock
                            PreviewMouseLeftButtonDown="TextBlock_PreviewMouseLeftButtonDown"
                            PreviewMouseLeftButtonUp="TextBlock_PreviewMouseLeftButtonUp"
                            Text="{Binding ItemTypeName}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Foreground" Value="{Binding NormalTextColor}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                                <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                                <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBox
                            Name="secondTextBox"
                            KeyDown="TextBox_KeyDown"
                            PreviewLostKeyboardFocus="TextBox_PreviewLostKeyboardFocus"
                            Text="{Binding ItemTypeName}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=secondTextBox}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Text="{Binding ItemFloor}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding NormalTextColor}" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                                <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                                <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <local:SelectedFromToBase
            x:Name="SelectedFromTo"
            Grid.Row="2"
            Width="Auto"
            DisplayUnitSystem="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}}">
            <local:SelectedFromToBase.Style>
                <Style TargetType="local:SelectedFromToBase">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsRouterVisible, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:SelectedFromToBase.Style>
        </local:SelectedFromToBase>

        <local:PassPointInfo
            Grid.Row="2"
            Width="Auto"
            DisplayUnitSystem="{Binding DisplayUnitSystem, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}}">
            <local:PassPointInfo.Style>
                <Style TargetType="local:PassPointInfo">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPassPointVisible, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="XPoint" Value="{Binding CoordinatesX, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}, Mode=OneWay}" />
                            <Setter Property="YPoint" Value="{Binding CoordinatesY, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}, Mode=OneWay}" />
                            <Setter Property="ZPoint" Value="{Binding CoordinatesZ, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}, Mode=OneWay}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:PassPointInfo.Style>
        </local:PassPointInfo>

    </Grid>
</Page>