<Page x:Class="Arent3d.Architecture.Routing.AppBase.Forms.FromToTree"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms"
      mc:Ignorable="d"
      Title="FromToTree"
      x:Name="root"
      Height="Auto" Width="Auto" Background="White">
    <Grid Background="White" Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="50*" />
            <RowDefinition Height="50*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Width="Auto" Height="Auto">
            <Label Content="{Binding TitleLabel, RelativeSource={RelativeSource FindAncestor, AncestorType=local:FromToTree}}" FontSize="20" />
        </StackPanel>


        <TreeView Name="FromToTreeView" Width="Auto" Height="Auto" Grid.Row="1"
                  BorderBrush="LightGray" BorderThickness="1"
                  SelectedItemChanged="FromToTreeView_OnSelectedItemChanged"
                  MouseDoubleClick="FromToTreeView_OnMouseDoubleClick" PreviewKeyDown="FromToTreeView_PreviewKeyDown">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="local:FromToItem" ItemsSource="{Binding Children}">

                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding Icon}" Height="16" Width="16" />
                        <TextBlock Text="{Binding ItemTypeName}" PreviewMouseLeftButtonDown="TextBlock_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="TextBlock_PreviewMouseLeftButtonUp">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Foreground" Value="{Binding NormalTextColor}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                                <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{Binding SelectionTextColor}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                                <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{Binding InactiveSelectionTextColor}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBox Name="secondTextBox" Text="{Binding ItemTypeName}" KeyDown="TextBox_KeyDown" PreviewLostKeyboardFocus="TextBox_PreviewLostKeyboardFocus">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=secondTextBox}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Text="{Binding ItemFloor}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding NormalTextColor}" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                                <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{Binding SelectionTextColor}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True" />
                                                <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{Binding InactiveSelectionTextColor}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <local:SelectedFromToBase x:Name="SelectedFromTo" Grid.Row="2" Width="Auto">
            <local:SelectedFromToBase.Style>
                <Style TargetType="local:SelectedFromToBase">
                    <!--TargetTypeをUserControlにしても変わらない-->
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsRouterVisibility}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="IsEnableSystemType" Value="{Binding IsEnableSystemType}" />
                            <Setter Property="IsEnableCurveType" Value="{Binding IsEnableCurveType}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:SelectedFromToBase.Style>
        </local:SelectedFromToBase>

        <local:PassPointInfo Grid.Row="2" Width="Auto">
            <local:PassPointInfo.Style>
                <Style TargetType="local:PassPointInfo">
                    <!--TargetTypeをUserControlにしても変わらない-->
                    <Setter Property="Visibility" Value="Hidden" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsConnectorVisibility}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="XPoint" Value="{Binding CoordinatesX}" />
                            <Setter Property="YPoint" Value="{Binding CoordinatesY}" />
                            <Setter Property="ZPoint" Value="{Binding CoordinatesZ}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:PassPointInfo.Style>
        </local:PassPointInfo>

    </Grid>
</Page>