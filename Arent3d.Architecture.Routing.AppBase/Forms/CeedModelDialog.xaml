<Window
    x:Class="Arent3d.Architecture.Routing.AppBase.Forms.CeedModelDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cvt="clr-namespace:Arent3d.Architecture.Routing.AppBase.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:Arent3d.Architecture.Routing.AppBase.Forms"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:Arent3d.Architecture.Routing.AppBase.Model"
    x:Name="WdCeedCodeView"
    Title="CeeD Models"
    Width="1200"
    Height="800"
    MinWidth="900"
    MinHeight="200"
    d:DataContext="{d:DesignInstance {x:Type local:DesignCeedViewModel},
                                     IsDesignTimeCreatable=True}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <cvt:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="230" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Button
            Grid.Row="0"
            Grid.Column="0"
            Width="100"
            Height="27"
            Margin="10,10,10,10"
            HorizontalAlignment="Left"
            Command="{Binding SymbolRegistrationCommand}"
            Content="使用シンボル登録" />

        <CheckBox
            Grid.Row="0"
            Grid.Column="0"
            Width="130"
            Margin="120,20,10,10"
            Checked="ShowOnlyUsingCode_Checked"
            Content="使用するものだけ表示"
            IsChecked="{Binding IsShowOnlyUsingCode, Mode=TwoWay}"
            Unchecked="ShowOnlyUsingCode_UnChecked"
            Visibility="{Binding IsVisibleShowUsingCode, Mode=TwoWay}" />

        <StackPanel
            Grid.Row="0"
            Grid.Column="1"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Orientation="Horizontal">
            <Label
                Name="LbCeedModelNumbers"
                Margin="10,5"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="セットコード"
                Visibility="Hidden" />
            <ComboBox
                Name="CmbCeedModelNumbers"
                Width="200"
                Height="27"
                IsEditable="True"
                IsTextSearchEnabled="False"
                ItemsSource="{Binding CeedSetCodes}"
                KeyDown="CmbKeyDown"
                SelectedValue="{Binding SelectedCeedSetCode, Mode=TwoWay}"
                Text="{Binding SelectedCeedSetCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="Hidden" />
            <Label
                Margin="20,5,5,5"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="表示機器記号" />
            <ComboBox
                Width="200"
                Height="27"
                IsEditable="True"
                IsTextSearchEnabled="False"
                ItemsSource="{Binding DeviceSymbols}"
                KeyDown="CmbKeyDown"
                SelectedValue="{Binding SelectedDeviceSymbolValue, Mode=TwoWay}"
                Text="{Binding SelectedDeviceSymbolValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Label
                Margin="20,5,5,5"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="形番" />
            <ComboBox
                Width="200"
                Height="27"
                IsEditable="True"
                IsTextSearchEnabled="False"
                ItemsSource="{Binding ModelNumber}"
                KeyDown="CmbKeyDown"
                SelectedValue="{Binding SelectedModelNumber, Mode=TwoWay}"
                Text="{Binding SelectedModelNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Button
                Width="80"
                Margin="20,5,5,5"
                HorizontalAlignment="Right"
                Command="{Binding SearchCommand}"
                Content="Search" />
        </StackPanel>

        <DockPanel
            Grid.Row="1"
            Grid.Column="1"
            LastChildFill="False">
            <CheckBox
                Width="120"
                Margin="0,10,0,0"
                Checked="ShowCeedModelNumberColumn_Checked"
                Content="CeeD型番の表示"
                DockPanel.Dock="Right"
                IsChecked="{Binding IsShowCeedModelNumber}"
                Unchecked="ShowCeedModelNumberColumn_UnChecked" />
            <CheckBox
                Name="CbShowDiff"
                Width="80"
                Margin="0,10,0,0"
                Content="差分表示"
                DockPanel.Dock="Right"
                IsChecked="{Binding IsShowDiff}"
                IsEnabled="{Binding IsEnableShowDiff}" />
            <CheckBox
                Margin="10,10,10,0"
                Content="条件表示"
                DockPanel.Dock="Right"
                IsChecked="{Binding Path=IsShowCondition, UpdateSourceTrigger=PropertyChanged}" />
        </DockPanel>

        <Button
            x:Name="BtnReplaceSymbol"
            Grid.Row="1"
            Grid.Column="0"
            Width="100"
            Height="27"
            Margin="10,5,10,10"
            HorizontalAlignment="Left"
            Click="Button_ReplaceSymbol"
            Content="モデル置き換え"
            IsEnabled="False" />

        <Button
            Grid.Row="1"
            Grid.Column="0"
            Width="100"
            Height="27"
            Margin="120,5,10,10"
            HorizontalAlignment="Left"
            Click="Button_ReplaceMultipleSymbols"
            Content="モデル一括置換" />

        <DockPanel
            Grid.Row="2"
            Grid.Column="0"
            Height="300"
            Margin="10,0"
            VerticalAlignment="Top"
            LastChildFill="True">
            <Label
                Padding="0,0,0,5"
                Content="形番orセットコードの選択でプレビュー可能"
                DockPanel.Dock="Top"
                FontWeight="Bold" />
            <TreeView
                x:Name="CategoryTreeView"
                Padding="0,5,5,5"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Top"
                BorderBrush="LightGray"
                BorderThickness="1"
                ItemsSource="{Binding Path=Categories}"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Auto">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding SelectedItemCommand}" CommandParameter="{Binding ElementName=CategoryTreeView}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="FontWeight" Value="Normal" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <HierarchicalDataTemplate DataType="{x:Type model:CategoryModel}" ItemsSource="{Binding Categories}">
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Width="16"
                                Height="16"
                                Margin="0,0,2.5,0"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                Source="../resources/icon_folder_16x16.png" />
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsExistModelNumber}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Foreground" Value="Gray" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
        </DockPanel>

        <DockPanel
            Grid.Row="2"
            Grid.Column="0"
            Height="300"
            Margin="10,0"
            VerticalAlignment="Bottom"
            LastChildFill="True">
            <Label
                Padding="0,0,0,5"
                Content="機器記号のみでプレビュー可能"
                DockPanel.Dock="Top"
                FontWeight="Bold" />
            <TreeView
                x:Name="CategoryPreviewTreeView"
                Padding="0,5,5,5"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Top"
                BorderBrush="LightGray"
                BorderThickness="1"
                ItemsSource="{Binding Path=CategoriesPreview}"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Auto">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding SelectedCategoryPreviewCommand}" CommandParameter="{Binding ElementName=CategoryPreviewTreeView}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="FontWeight" Value="Normal" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <HierarchicalDataTemplate DataType="{x:Type model:CategoryModel}" ItemsSource="{Binding Categories}">
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Width="16"
                                Height="16"
                                Margin="0,0,2.5,0"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                Source="../resources/icon_folder_16x16.png" />
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsExistModelNumber}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Foreground" Value="Gray" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
        </DockPanel>

        <StackPanel
            Grid.Row="2"
            Grid.Column="1"
            Margin="10,0"
            Orientation="Horizontal">
            <DataGrid
                x:Name="DtGrid"
                Width="650"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                ItemsSource="{Binding CeedModels}">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Padding" Value="-2" />
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <cvt:BindingProxy x:Key="Proxy" Data="{Binding Path=IsShowCondition}" />
                </DataGrid.Resources>

                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=CbShowDiff, Path=IsChecked}" Value="true" />
                                    <Condition Binding="{Binding Path=IsAdded}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="Goldenrod" />
                                    <Setter Property="BorderBrush" Value="Goldenrod" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=CbShowDiff, Path=IsEnabled}" Value="false" />
                                    <Condition Binding="{Binding Path=IsUsingCode}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="Orange" />
                                    <Setter Property="BorderBrush" Value="Orange" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="RoyalBlue" />
                                <Setter Property="BorderBrush" Value="RoyalBlue" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns>

                    <DataGridTextColumn
                        MinWidth="100"
                        Binding="{Binding CeedSetCode, ValidatesOnExceptions=True}"
                        CanUserSort="False"
                        Header="セットコード"
                        IsReadOnly="True"
                        Visibility="{Binding Path=Data, Converter={StaticResource BooleanVisibilityConverter}, Source={StaticResource Proxy}}" />

                    <DataGridTextColumn
                        MinWidth="130"
                        Binding="{Binding CeedModelNumber, ValidatesOnExceptions=True}"
                        CanUserSort="True"
                        Header="CeeD型番"
                        IsReadOnly="True"
                        Visibility="Hidden" />

                    <DataGridTextColumn
                        MinWidth="200"
                        MaxWidth="220"
                        Binding="{Binding ModelNumber, ValidatesOnExceptions=True}"
                        CanUserSort="False"
                        Header="形番"
                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn
                        Width="*"
                        MinWidth="100"
                        Binding="{Binding Condition, ValidatesOnExceptions=True}"
                        CanUserSort="False"
                        Header="条件"
                        IsReadOnly="True"
                        Visibility="{Binding Path=Data, Converter={StaticResource BooleanVisibilityConverter}, Source={StaticResource Proxy}}">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=CbShowDiff, Path=IsChecked}" Value="true" />
                                            <Condition Binding="{Binding Path=IsAdded}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Background" Value="Goldenrod" />
                                            <Setter Property="BorderBrush" Value="Goldenrod" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=CbShowDiff, Path=IsEnabled}" Value="false" />
                                            <Condition Binding="{Binding Path=IsUsingCode}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Background" Value="Orange" />
                                            <Setter Property="BorderBrush" Value="Orange" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=CbShowDiff, Path=IsChecked}" Value="true" />
                                            <Condition Binding="{Binding Path=IsEditCondition}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Background" Value="Red" />
                                            <Setter Property="BorderBrush" Value="Red" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="RoyalBlue" />
                                        <Setter Property="BorderBrush" Value="RoyalBlue" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn
                        MinWidth="130"
                        Binding="{Binding GeneralDisplayDeviceSymbol, ValidatesOnExceptions=True}"
                        CanUserSort="False"
                        Header="一般表示用機器記号"
                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel
                Width="260"
                Margin="20,0"
                DockPanel.Dock="Left">
                <Label Content="プレビュー" FontWeight="Bold" />
                <ListView
                    Height="608"
                    ItemsSource="{Binding PreviewList}"
                    MouseDoubleClick="PreviewListMouseDoubleClick"
                    ScrollViewer.CanContentScroll="True"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding FloorPlanImage}" Stretch="None" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </StackPanel>

        <Button
            Grid.Row="3"
            Grid.Column="1"
            Width="80"
            Height="27"
            Margin="10,5,90,5"
            HorizontalAlignment="Right"
            Command="{Binding ResetCommand}"
            Content="Reset" />
        <Button
            Grid.Row="3"
            Grid.Column="1"
            Width="80"
            Height="27"
            Margin="10,5,5,5"
            HorizontalAlignment="Right"
            Command="{Binding Path=OkCommand}"
            CommandParameter="{Binding ElementName=WdCeedCodeView}"
            Content="OK" />
    </Grid>
</Window>